{"_id":{"$id":"51feb422560e7051629dab64"},"date":"2013-02-02 17:04:59","content":"This is a simple guide to setting up a PIR sensor with a raspberryPI to send a wake-on-lan packet to one or more computers. The idea being that as I walk into my office, everything boots up or comes out of hibernation automatically.\r\n\r\nSSH into the pi and get the latest python dev code:\r\n\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\nsudo apt-get install python-dev\r\nsudo apt-get install python-rpi.gpio\r\n\r\nInstall the Wake On Lan command:\r\n\r\nsudo apt-get install wakeonlan\r\n\r\nPlug in your PIR sensor using the 5 volt power line (pin 2), GPIO 7 for data (pin 26), the ground pin (pin 6). A word of caution, these pins should absolutely not be shorted out, they are also static sensitive.\r\n\r\nRaspberryPI with a working PIR sensor:\r\n<img src=\"http:\/\/farm9.staticflickr.com\/8232\/8437449003_b80370ef29_z.jpg\" alt=\"\" \/>\r\n\r\nCreate a file called PIR-wake-on-lan.py on the raspberryPI and put this source code into it:\r\n<a href=\"https:\/\/github.com\/craigmayhew\/scratchpad\/blob\/master\/python\/PIR-wake-on-lan.py\">https:\/\/github.com\/craigmayhew\/scratchpad\/blob\/master\/python\/PIR-wake-on-lan.py<\/a>\r\n\r\nYou will need to edit the file and put in your own mac address in place of \"wakeonlan 00:00:00:00:00:00\".\r\n\r\nTry running the script.\r\nsudo python PIR-wake-on-lan.py","title":"RaspberryPi Power Management with a PIR Sensor","status":"publish","name":"raspberrypi-power-management-with-a-pir-sensor","type":"","tags":["Automation","RaspberryPI","PIR"],"categories":["General"],"comments":[]}